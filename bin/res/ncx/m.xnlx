{
    pattern domain {
        precedence: true
        pattern rule {
            precedence: true
            final: false
            pattern: [letters]
            AND {
                affixation: prefix
                ADD definer_ {
                    pattern: ['=' pattern]
                    direction: right
                }
                ADD finalizer_ {
                    pattern: ['final']
                    direction: left
                }
            }
        }

        pattern banning {
            pattern: ['ban' letters names]
        }

        pattern name {
            final: false
            pattern: [letters]
            multitude _s {
                in: parenthesis
                separator: ','
            }
        }

        pattern precedent_mark {
            pattern: ['---']
        }

        multitude sub_ {
            in: curly_braces
            separator: ';'
        }
    }
    pattern pattern {
        final: false
        multitude verbatim {
            opaque: true
            in: single_quotes
        }
        pattern constant {
            pattern epsilon {
                pattern: ['epsilon']
            }
            pattern streak_ {
                pattern -letters {
                    pattern: ['letters']
                }
                pattern -digits {
                    pattern: ['digits']
                }
            }
            pattern enclosure_ {
                pattern -parenthesis {
                    pattern: ['parenthesis']
                }
                pattern -square_brackets {
                    pattern: ['square_brackets']
                }
                pattern -curly_braces {
                    pattern: ['curly_braces']
                }
                pattern -arrows {
                    pattern: ['arrows']
                }
                pattern -double_arrows {
                    pattern: ['double_arrows']
                }
                pattern -single_quotes {
                    pattern: ['single_quotes']
                }
                pattern -double_quotes {
                    pattern: ['double_quotes']
                }
                pattern -backticks {
                    pattern: ['backticks']
                }
                pattern -begin_end {
                    pattern: ['begin_end']
                }
                pattern -single_line_comment {
                    pattern: ['single_line_comment']
                }
                pattern -multi_line_comment {
                    pattern: ['multi_line_comment']
                }
            }
            pattern separator_ {
                pattern -semicolons {
                    pattern: ['semicolons']
                }
                pattern -commas {
                    pattern: ['commas']
                }
            }
        }

        pattern reference {
            pattern: [letters]
        }

        pattern enclosure {
            pattern: [verbatim '...' verbatim]
        }

        pattern multitude {
            pattern: ['many' pattern]
            pattern: ['use' reference]
            AND {
                precedence: true
                direction: right
                pattern separated_ {
                    final: false
                    pattern: ['separated_by']
                    OR {
                        pattern: [separator_constant]
                        pattern: [verbatim]
                    }
                }
                pattern enclosed_ {
                    pattern: ['enclosed_in' pattern]
                }
            }
        }

        pattern or {
            pattern: [pattern 'OR' pattern]
        }

        multitude parenthesized {
            in: parenthesis
        }
    }
}

/*
    AND means at least one
    OR means exactly one
*/