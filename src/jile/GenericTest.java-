package jile;

import java.util.*;

public class GenericTest {

    private class A {
    }

    private class B extends A {
    }

    private class C extends B {
    }

    private class D extends A {
    }

    private class SimpleGeneric<T> {
    }

    static void t(SimpleGeneric<B> q) {
    }

    static void t_extends(SimpleGeneric<? extends B> q) {
    }

    static void t_super(SimpleGeneric<? super B> q) {
    }

    static void main(String[] args) {

        // only <B> fits <B>
        t((SimpleGeneric<Object>) null);
        t((SimpleGeneric<A>) null);
        t((SimpleGeneric<B>) null);
        t((SimpleGeneric<C>) null);
        t((SimpleGeneric<D>) null);

        // <B> and <C> fit <? extends B>
        t_extends((SimpleGeneric<Object>) null);
        t_extends((SimpleGeneric<A>) null);
        t_extends((SimpleGeneric<B>) null);
        t_extends((SimpleGeneric<C>) null);
        t_extends((SimpleGeneric<D>) null);

        // <A> and <B> and even <Object> <? super B>
        t_super((SimpleGeneric<Object>) null);
        t_super((SimpleGeneric<A>) null);
        t_super((SimpleGeneric<B>) null);
        t_super((SimpleGeneric<C>) null);
        t_super((SimpleGeneric<D>) null);

        // <Object> fits <? super T> where T can be any type
    }
}